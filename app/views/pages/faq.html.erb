<% @title = "FAQ" %>
<% @subtitle = "don't worry, be happy" %>

<p>
  <b>Is this site supposed to replace RubyForge?</b><br />
  This site is meant to replace RubyForge's gem hosting service. Replacing RubyForge as a whole is out of scope for this project. It has plenty of features (source code hosting, mailing lists, etc) that Gemcutter will never have. The real benefit here is a limited scope of features that can be focused more heavily on, and it's a full scale community effort that we can improve as time goes on.
</p>

<p>
  <b>Where can I get some help using Gemcutter?</b><br />
  We've got a <%= link_to "Help wiki page", "http://wiki.github.com/qrush/gemcutter/help" %> for common problems. There's also been some great tutorials on using gemcutter, including a <%= link_to "Railscast", "http://railscasts.com/episodes/183-gemcutter-jeweler" %> and several blog posts, some of the most notable by <%= link_to "Adam Wiggins", "http://adam.blog.heroku.com/past/2009/10/3/instant_gem_publishing_with_gemcutter/" %> and <%= link_to "Pat Allan", "http://freelancing-gods.com/posts/better_gem_publishing_with_gemcutter" %>.</p>

<p>
  <b>How annoying will this be to upgrade?</b><br />
  The plan is to use Gemcutter as your canonical gem repository. All of the same gems that were available on RubyForge are ready for your consumption. Install the gemcutter gem and run <code>gem tumble</code> to use it as your primary source.
</p>

<p>
  <b>How can the process for publishing gems get any easier?</b><br />
  Through one command- <code>gem push awesome-0.0.0.gem</code>. <%= link_to "Read more here.", page_path("create") %>
</p>

<p>
  <b>Can anyone push to any gem?</b><br />
  No. For new gems, once you push them you automatically gain control over it. For existing gems, you need permission to push to them. This permission can be granted by the gem owner, or if the gem was brought over from RubyForge you can use the <%= link_to "migration process", page_path("migrate") %>.
</p>

<p>
  <b>How can I gain access of my gem that was available through RubyForge?</b><br />
  Run <code>gem migrate</code> with the name of your gem, and that's it! Given you have the proper access to your RubyForge account, the Gemcutter gem will upload a secret key to your project's web space on RubyForge then verify its existence to give you full access to your account.
</p>

<p>
  <b>Will the gem installation process change for those who don't publish gems?</b><br />
  No. In fact it will make their lives better: it will be easier to get to project pages with clearer information and the same data they're used to.
</p>

<p>
  <b>Why is this better than GitHub gem hosting?</b><br />
  GitHub's gem system is great, but it's not the canonical source by default. The nice part is that it takes the approval process out, but the namespacing on gems makes it hard for those new to the community to determine what is the right copy to use. 
</p>

<p>
  <b>How can I help?</b><br />
  Fork away on <a href="http://github.com/qrush/gemcutter">GitHub</a> and make your changes! Gemcutter is run on a 'commit bit' policy, so once you've submitted a patch that is accepted, you can gain access to the main repository if you'd like.
</p>
